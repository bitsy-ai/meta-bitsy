# The top level settings are used as module
# and system configuration.
# A set of users which may be applied and/or used by various modules
# when a 'default' entry is found it will reference the 'default_user'
# from the distro configuration specified below
users:
   - default

# If this is set, 'root' will not be able to ssh in and they
# will get a message to login instead as the default $user
disable_root: false

#mount_default_fields: [~, ~, 'auto', 'defaults,nofail', '0', '2']
#resize_rootfs_tmp: /dev
#ssh_pwauth:   0

# This will cause the set+update hostname module to not operate (if true)
preserve_hostname: false

# If you use datasource_list array, keep array items in a single line.
# If you use multi line array, ds-identify script won't read array items.
# Example datasource config
# datasource:
#    Ec2:
#      metadata_urls: [ 'blah.com' ]
#      timeout: 5 # (defaults to 50 seconds)
#      max_wait: 10 # (defaults to 120 seconds)

manage_etc_hosts: true

# https://cloudinit.readthedocs.io/en/latest/topics/events.html?highlight=updates%3A#examples
updates:
   network:
      when: ["boot", "boot-legacy", "hotplug"]

# The modules that run in the 'init' stage
cloud_init_modules:
   - migrator
   - seed_random
   - bootcmd
   - write-files
   - disk_setup
   - mounts
   - set_hostname
   - update_hostname
   - update_etc_hosts
   - resolv_conf
   - ca-certs
   - users-groups
   - ssh

# The modules that run in the 'config' stage
cloud_config_modules:
   - keyboard
   - locale
   - set-passwords
   - ntp
   - timezone
   - runcmd

# The modules that run in the 'final' stage
cloud_final_modules:
   - write-files-deferred
   - scripts-vendor
   - scripts-per-once
   - scripts-per-boot
   - scripts-per-instance
   # disable user scripts
   # Raspberry Pi imager hard-codes the following as a runcmd (rendered to /var/lib/cloud/instance/scripts/runcmd by cloud-init)
   # https://github.com/raspberrypi/rpi-imager/blob/b09fc414864a9c7f31430642fbec7bfb754a9143/src/OptionsPopup.qml#L772
   # This results in the following script output, which will fail because
   # 1) We don't use setupcom
   # 2) Locale setup is handled in a previous step
   # 3) Wireless CRDA reg db is installed to /lib/crda/regulatory.bin and device rules in /lib/udev/rules.d/85-regulatory.rules
   # sed -i 's/^s*REGDOMAIN=S*/REGDOMAIN=US/' /etc/default/crda || true
   # localectl set-x11-keymap "us" pc105
   # setupcon -k --force || true
   # - scripts-user
   - ssh-authkey-fingerprints
   - keys-to-console
   - install-hotplug
   - final-message
   - power-state-change

# System and/or distro specific settings
# (not accessible to handlers/transforms)
system_info:
   # This will affect which distro class gets used
   distro: bitsy
   network:
      renderers: ['netplan', 'network-manager', 'networkd', 'eni']
   default_user:
      name: printnanny
      lock_passwd: True
      gecos: PrintNanny
      groups: [adm, audio, dialout, gpio, i2c, input, netdev, plugdev, spi, sudo, video]
      sudo: ["ALL=(ALL) NOPASSWD:ALL"]
      shell: /bin/bash
